#+TITLE: Mssql

# Configuration Tips

- The default install enables Windows authentication only, set the =LoginMode= registry key under =HKLM\Software\Microsoft\Microsoft SQL Server\ [instancename] \MSSqlServer= to =2= to enable mixed mode.

- New CLI client =mssql-cli=

DDL; DML (=SELECT=, =INSERT=, =UPDATE=, =DELETE=, =MERGE=, =TRUNCATE=); DCL (control): deals with permissions and includes =GRANT= and =REVOKE=

An element is identified by its key values, not by positions. A query against a table can return table rows in any order unless explicitly requested.

* Installation Caveats

- Run /System Configuration Checks/ before installation to check any prerequisite.

** Components

- Database Enginer :: a must

- Machine Learning Services :: as the name; optional

- Integration Services :: optional; integration with various data sources from XML, flat
  files to relational data without much coding.
  + from text, XML, Excel, relational databases
  + ADO, ADO.NET, EXCEL, file, FTP, HTTP, MSMQ, OLEDB, ODBC, SMTP, WMI, ORACLE etc.

- Analysis Services :: optional; decision support and business analytics
  + data models for Power BI; Excel, data visualization.

- Replication :: data synchronization between databases to maintain consistency.

- Data Quality Services :: optional; data cleansing, data matching, monitoring,
  knowledge base without coding.

- Master Data Services :: optional; master data; data organization, data modeling

** Editions

In addition to feature difference, different editions have different scale limits (CPU limits, memory usage limits)

- Standard: lesser of 4 sockets or 24 cores, 128 GB memory

- Enterprise: no limits

** Services

- Database Engine (=MSSQLSERVER= or =MSSQL$<instance_name>) :: =\<MSSQLPATH>\MSSQL\Binn\sqlservr.exe=
  + default startup options are saved in the registry. Startup parameters may be
    configured with =Sql Server Configuration Manager=

- SQL Server Agent (=SQLServerAgent=) :: =\<MSSQLPATH>\MSSQL\Binn\sqlagent.exe=
  + task automation (jobs), monitoring SQL Server

- SQL Server Browser :: name resolution service that provides SQL Server
  connection information for client computers
  + listen to UDP 1434
  + list available servers
  + named instances may use dynamic ports; the browser directs clients to the
    correct port.

- SQL Writer :: backup and restore application in the Volume Shadow Copy Service
  framework (a Windows service)

** User Accounts

- installation requires a =sysadmin= role.

- the =sa= account (SQL Authentication) is also a database login and a member of =sysadmin=.

- The per-service service security principal (SID) is a login and a member of =sysadmin=.

** Multiple Instances

Installation of multiple instances on the same host is supported. No special
configuration except possible TCP port conflicts needs to be done.

SQL Server Browser and SQL Server VSS Writer are shared by all instances.
Database Engine, Analysis Services and Reporting Services are specific to an
instance. Some other components are shared by instances of the same major version.

An instance may be default (named =MSSQLSERVER=) or named. A named instance is identified by the
computer name plus the instance name. The instance name is required for clients
to connect to a named instance. A named instance has an /instance ID/ (by
default its name).

** Server Configuration

- Tools: SQL Server Management Studio or =sp_configure= system stored procedure.

- View options: =sys.configurations= catalog view
  + =value=: the configured value
  + =value_in_use=: the actual current value in use
  + =is_dynamic=: whether not to require a database engine restart


Some options are self-configuring. Some requires a database engine restart.
Configuration options take effect immediately after setting the option and
issuing =RECONFIGURE= (or =RECONFIGURE WITH OVERRIDE= in some cases).

* Startup & Stop

Only a local administrator can start, stop, pause, resume or restart SQL Server
service.
=SHUTDOWN= statement requires =sysadmin= or =serveradmin= role.

#+begin_src sql
SHUTDOWN; -- wait for running T-SQL statements and SPs to finish and then stop the database
SHUTDOWN WITH NOWAIT; -- immediately stop
#+end_src

** Single-Use Mode =-m=

Stop the SQL Server Agent before entering the single-user mode, or limit the app
with =-m"SQLCMD"=.

Any member of the Administrators group may connect to the instance but only one
user for maintenance.

** Minimal Configuration =-f=

More restricted than single-user mode: single user, no remote access, no startup
stored procedure run, no audit.

* Connections & protocols

** Concepts

- /Endpoint/ :: a connection on the server is represented by a T-SQL endpoint.
  + Permissions can be granted, revoked, and denied for Transact-SQL endpoints.
    By default, all users have permissions to access an endpoint unless the
    permissions are denied or revoked by a member of the sysadmin group or by
    the endpoint owner.
    + T-SQL local machine; T-SQL named pipes; T-SQL default TCP

** Configuration

Communication protocols are configured through SQL Server Configuration Manager.

By default shared memory (on the same host, mainly for troubleshooting) is
enabled for all editions;
TCP/IP is enabled for all except Developer edition; named pipes (for LAN) are disabled.

By default, a SQL Server instance is configured for TCP/IP port 1433 and named
pipe =\\.\pipe\sql\query=. A named instance are configured for TCP dynamic ports
with a port assigned by the OS.

** Client Connection

#+begin_src
# shared memory, (local) may be used as the server name on the same computer
lpc:<servername>[\instancename]

# TCP/IP, by default on port 1433
# "(local)", a period "." or "localhost" may be used as the server name on the same computer
tcp:<servername>[\<instancename>],<port>
tcp:<IPAddress>[\<instancename>],<port>
#+end_src

- /Server Alias/ :: an alternate name used for client connection that includes
  required elements of a connection string.
  + configured in SQL Server Configuration Manager

*** Drivers

**** SQL Server Native Client (Legacy)

the ODBC and OLE DB drivers for SQL Server (2nd gen), superseded Windows DAC
(new name for MDAC following MDAC 2.8) or MDAC (the
1st gen ODBC driver).

Removed since SQL Server 2022.

**** Microsoft ODBC Driver for SQL Server (Recommended)

3rd gen

Including =sqlcmd= and =bcp=.

**** Microsoft OLE DB Driver for SQL Server (Recommended)

Since 2018. Supersedes Microsoft OLE DB Provider for SQL Server (SQLOLEDB, 1st gen) and SQL Server
Native Client (2nd gen).

**** ADO.NET

- =System.Data.SqlClient=: included as part of .NET

- =Microsoft.Data.SqlClient=: since 2019, new generation

**** JDBC

Since 2000, open sourced in 2016.

*** Client Tools

**** =sqlcmd=

There are ODBC =sqlcmd= (old) and Go =sqlcmd= (new).

- =-C= :: =TRUSTSERVERCERTICIATE = true=
  - =-N= :: encrypted connection, =true=, =false= or =disable=

- =-E= (default) :: use a trusted connection (Windows Authentication Mode)

- =-d= :: =USE <db_name>=

- =-U=, =-P= :: (SQL Server Authentication) login name and password

- =-S= :: database server =[protocol:]server_name_or_ip_address[\instance_name][,port]=
  + Supported protocols: =tcp= (TCP/IP), =lpc= (shared memory) or =np= (named pipes)

- =-i input_file=, =-o output_file= :: input T-SQL script and output text file

- =-q= :: executes a T-SQL upon startup
  + =-Q= :: exits upon finish

***** Commands

- =GO= :: end of a batch and the execution of any cached T-SQL statements.
  + =sqlcmd= puts every input line in the statement cache and sends them to the
    server only when =GO= is issued.

- =:Connect= :: connect to an instance

- =USE= :: set the current database.

*** HOW-TO: Connect to the System When Locked Out

- =-m= or =-f= in single-user mode as a member of local Administrators.
  + stop SQL Server Agent beforehand

- Create a login and add the new login to the =sysadmin= server role.

* Security

** Authentication Mode

- /Windows Authentication/: by default =BUILTIN\Administrators= local group
  mapped to the =sysadmin= server role. SQL Server validates by using the
  Windows principal token in the OS.
  + add at least one Windows principal as an administrator.

- /SQL Server Authenticatin/: a =sa= (system administrator) login is set up for administrator.
  + for backward compatibility, less secure.

** Users, Logins and Roles

A client connects to the database with a /Login/ (instance-level authentication
object), possibly with a credential. A user (database-level authorization
principal) can be associated with a login.

* Backup and Restore

Use =BACKUP= to export a backup file. To =RESTORE= as another database, add
=WITH MOVE ... to ...=.

* Localization, Internationalization & Collation

#+begin_quote
Collations in SQL Server provide sorting rules, case, and accent sensitivity
properties for your data. Collations that are used with character data types,
such as char and varchar, dictate the code page and corresponding characters
that can be represented for that data type.
...
A collation specifies the bit patterns that represent each character in a
dataset. Collations also determine the rules that sort and compare data.
For non-Unicode columns, the collation setting specifies the code page for the
data and which characters can be represented. The data that you move between
non-Unicode columns must be converted from the source code page to the
destination code page.
#+end_quote

Collation may be defined at /server/ level, /database/ level, /column/ level or
/expression/ level. Collations determine case sensitivity, accent sensitivity,
kana sensitivity, width sensitivity,
variation-selector (a Unicode feature) sensitivity

*** Collation Sets

- /Windows collations/ :: based on Windows system locale
  + the base Windows collation defines the sorting rules for dictionary sorting
  + For English locales, =Latin1_General= is used by default.

- /Binary collations/ :: based on the sequence of coded values defined by hte
  locale and data type.
  + =BIN= incomplete code-point to code-point comparison for Unicode data
  + =BIN2= pure code-point comparison, sorted by the code points.

- /SQL Server collations/ :: for backward compatibility

*** Collation levels

- Server Level
  + not changeable without rebuilding the =master= database.

- Database Level: defined with =CREATE DATABASE= or =ALTER DATABASE=
  + =tempdb= always uses the server collation

- Column Level

- Expression Level: =ORDER BY COLUMN_NAME COLLATE COLLATION_NAME=

*** Unicode

**** Caveats

- Supplementary characters aren't supported for use in metadata, such as in names of database objects.

**** UTF-16

Since SQL Server 2005 as =nchar=, =nvarchar=, =ntext= (Supplementary character =SC=
support since SQL Server 2012). Supported by OLE DB, ODBC
3.7 or later.

**** UTF-8

Supported as part of some collations (that supports supplementary characters,
denoted with the =UTF8= suffix) since SQL Server 2019 in =char=, =varchar=.

**** GB18030

#+begin_quote
SQL Server provides support for GB18030-encoded characters by recognizing them
when they enter the server from a client-side application and converting and
storing them natively as Unicode characters.
All version 100 collations support linguistic sorting with GB18030 characters.
#+end_quote
