G#+TITLE: Oracle_admin

* Common Tasks and Tools

*** Common Tasks

1. Installing/Upgrading software:

2. creating databases

3. Start/stopping the instance

4. Managing the storage structures of the database

5. Managing users and security

6. Managing database objects

7. Backup and recovery

8. Monitoring and tuning the performance

*** Tools

1. Oralce Universal Installer

2. Oracle Database Configuration Assistant

3. Database Upgrade Assistant

4. Net Configuration Assistant

5. Oracle Enterprise Manager Database Express

6. SQL Developer

* Installation

- System Identified (SID): unique identifier on the system

- Global database name: =database_name.database_domain=

- Operating System Groups: administrative access to database is granted by
  membership in certain OS groups.

** Environment Variables

- =ORACLE_SID=

- On Unix, a profile file for shell, on Windows =HKLM:\Software\Oracle=

- Oracle Base =ORACLE_BASE=: a directory where Oracle software is installed;
  Oracle database is installed in =ORACLE_HOME=, a subdirectory of the base
  directory. =ORACLE_HOME/bin= needs to be in =PATH=.

** Creating A Database

- Fast Recovery Option: LGWR can archive the inactive redo log group to recover all commited transactions, or to keep a standby database current with its original database.

- Connection Mode:
  + Dedicated Server mode: default. each user process gets a server process. typical for persistent long running requests to the database.
  + Shared server mode: all client connections share a database-allocated pool of resources.

- =DATABASE_PROPERTIES=, =GLOBAL_NAME=, =V$DATABASE=

** Database Service

A named representation of one or more database instances, either a
single-instance database or an RAC.

Database services are not just a name, but also units of resource management,
performance measurement, editioning. It divides workloads of a single database
into mutually disjoint groupings. Each database service represents a workload
with common attributes, service-level thresholds and priorities.

Database services are managed in the data dictionary.

*** Service Creation

=SRVCTL= with Oracle Restart

otherwise use =DBMS_SERVICE.CREATE_SERVICE=

*** View

- =DBA_SERVICES=, =ALL_SERVICES=, =V$SERVICES=, =V$ACTIVE_SERVICES=,
  =V$SERVICE_STATS=, =V$SERVICE_EVENT=, =V$SERVICE_WAIT_CLASS=,
  =V$SERVICEMETRIC=, =V$SERVICEMETRIC_HISTORY=

* Network Configuration

Oracle Net establishes the connection between the client application and the database over a network and exchanges messages between them using industry standard protocols.

- /Service Name/: a logical representation of a database, presented to clients.
  A single database can be presented as multiple services and a single service
  can have multiple databases behind.

** Oracle Net Listener

a process that listens for client connection requests and manages the traffic of the requests to the database server.
A listener is configured with one or more listening protocol addresses,
information about supported services and parameters that contril its runtime behavior.

- The Configuration file: =listener.ora= located in the =network/admin= of the
Oracle home directory. Also configured by /Oracle Net Manager/.

- there is a default listener that listens on the TCP port 1521 and the
database registers with the listener at this protocol address.

#+begin_src
lsnrctl status/start/stop
#+end_src

*** Service Registration

An oracle database registers within a minute or so of starting up by the
listener registration process (=LREG=). The service names or the database that they represent can be configured in =listener.ora=. Dynamic registration requires no configuration of =listener.ora=. (Dynamic) Service registration provides a load balancing mechanism and connection-time failover in case one instance is down.

Listener configuration must be set to listen on the ports named in the database initialization file. An listener alias can be configured inside the =tnsnames.ora= on the database host.

**** Local Listener

=LOCAL_LISTENER=

#+begin_src
alter system set local_listener=alias_or_actual_protocol_address;
#+end_src

Beware of the default value of =local_listener=, this might cause the database to fail to find the listener.

**** Remote Listener

=REMOTE_LISTENER=

#+begin_src
alter system set remote_listener=alias_or_actual_protocol_address; // may be direct addressing or a naming in listener.ora
// (DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=remote_ip)(PORT=1521)))
#+end_src

Remote listener might need to disable VNCR (valid_node_checking_registration) to allow remote registration.

**** Create Service

#+begin_src sql
dbms_service.create_service
dbms_service.start_service
#+end_src

** Client Connections

- Connect Descriptors

#+begin_src
DESCRIPTION=
    (ADDRESS=(PROTOCOL=tcp)(HOST=my-server)(PORT=1521))
    (CONNECT_DATA=
        (SERVICE_NAME=mydb.us.example.com))
#+end_src

- Connect String
  + a connect descriptor
  + a net service name that resolves to the connect descriptor by /Easy Connect [Plus]
    Naming/ (no configuration required), /Local Naming/ (in a client configuration file =tnsnames.ora=) or /Directory Naming/ (by an
    LDAP-compliant directory server).

* Instance Management

- /Oracle instance/: a set of Oracle Database background processes that operate on
  the stored data and the shared allocated memory.
  + instance ID known as /system ID/ (/SID/)
  + configured using an instance /initialization parameters file/.

** Initialization Parameter

- /Initialization Parameter File/
  + /Server Parameter file/ (spfile): a binary form of init parameter file
    written and read by the database.
  + /Text initialization parameter file/: edited manually but not by the
    database.
    - a spfile can be created from a text init file or the in-memory values of
      all init parameters.
    - a text init parameter file can be created from an spfile.
  + default location: =initORACLE_SID.ora= (PFILE), =spfileORACLE_SID.ora= (SPFILE) under =$ORACLE_HOME/database= or
    =$ORACLE_HOME/dbs=. There is a sample pfile =init.ora= under =ORACLE_HOME=.
  + =STARTUP= first searches for an SPFILE and then a text PFILE if ~PFILE=~ is
    not specified.

- initialization parameters can be /static/ or /dynamic/ depending on whether
  they can be changed after startup.

- =CREATE PFILE= to export and =CREATE SPFILE= to import.

#+begin_src sql
alter system set name = value scope=memory/spfile/both;
alter system reset parname
#+end_src

- to view parameters
  + =SHOW PARAMTER= (memory), =SHOW PARAMETERS= (the current spfile) in SQL Plus
  + =CREATE PFILE=
  + =V$PARAMTER=, =V$PARAMTERS= (for the current session)
  + =V$SYSTEM_PARAMTER=, =V$SYSTEM_PARAMETER2=
  + =V$SPPARAMTER= (the current spfile)

** Instance Memory Management

- /Memory Structures/:
  + /System Global Area/: shared by all server and background processes
    + database buffer cache: cached data
    + shared pool: shared SQL statements, data dictionary information, stored
      procedure
    + redo log buffer
    + In-Memory data
    + Java pool
    + Result cache
  + /Program Global Area/: data and control information for a server process
    + used to process SQL statements and hold logon and other session information.

- /Automatic Memory Management/: dynamically exchanges memory between the SGA
  and the instance PGA as needed to meet processing demands with a set total
  memory size used by the instance.
  + enabled by default
  + ~MEMORY_TARGET = SGA_TARGET + max(PGA_AGGREGATE_TARGET, maximum PGA
    allocated)~:
     the Oracle systemwide usable memory. Total memory usage can grow
    beyond the value of =MEMORY_TARGET=.
  + set =MEMORY_MAX_TARGET= for future allocation.

- /Automatic Shared Memory Management/: targetx and maximum sizes are set for SGA.
  + set =MEMORY_TARGET= to 0. Set =SGA_TARGET= to a proper size.

- /Manual Shared Memory Management/: memory sizes of several SGA components are
  set manually.
  + set =SGA_TARGET= and =MEMORY_TARGET= to 0 and manually sets other memory sizes.

- /Automatic PGA Memory Management/: =PGA_AGGREGATE_TARGET=, used with
  Automatic/manual shared memory management.

** Background Processes

- /Background processes/
  + not necessarily OS processes.
  + /Database writer/ (DBWn): write buffer cache to disk files.
  + /Log Writer/ (LGWR): writes redo log entries to disk.
  + /Checkpoint/ (CKPT): checkpoints are times when all modified database
    buffers in the SGA are written to the data files by DBWn. This process is
    responsible for managing checkpoints.
  + /System Monitor/ (SMON): instance recovery
  + /Archiver/ (ARCn): coopy the online redo log files to archival storage.
  + /Manageability monitor/ (MMON): various management-related background tasks.
  + /Job Queue Processes/ (CJQ0 and Jnnn): run user jobs.

- /Server Processes/: a process that handles the connection to the database on
  behalf of the client program such as parsing and running SQL statements and
  retrieving and returning results to the client program.
  + dedicated/shared: a server can service one/multiple user progresses.
  + With shared processes, the user connects to a dispatcher which supports
    multiple client connections concurrently. Each client is bound to a /virtual
    circuit/, handled by real server processes. To use shared servers, set
    =SHARED_SERVERS= and =DISPATCHERS= (note the default service restriction).
  + Typically one shared process for every ten connections. =SHARED_SERVERS= is
    a dynamic parameter that can be set according to server loads.
  + =V$DISPATCHER=, =V$DISPATCHER_CONFIG=, =V$QUEUE=, =V$CIRCUIT=,
    =V$SHARED_POOL_RESERVED=, =V$SHARED_SERVER=, =V$DISPATCHER_RATE=


- Database Resident Connection Pooling (DRCP): for web applications where the
  application acquires a connection and works on it for a short duration. DRCP
  pools dedicated servers and thus has as many sessions as the server processes.
  It enabled sharing of database connection across
  middle-tier processes. Useful for multi-process single-threaded application
  servers that cannot perform middle-tier connection pooling.
  + =DRCP_DEDICATED_OPT=: DRCP optimization; =MAX_AUTH_SERVERS=,
    =MIN_AUTH_SERVERS=
  + =DBMS_CONNECTION.START_POOL()= to start the default connection pool.
    =DBMS_CONNECTION.STOP_POOL()= stops the pool.
  + The =DBMS_CONNECTION_POOL= package configures the pool.
  + =DBA_CPOOL_INFO=, =V$CPOOL_CONN_INFO=, =V$CPOOL_STATS=, =V$CPOOL_CC_INFO=,
    =V$CPOOL_CC_STATS=

- the database can be set to =THREADED_EXECUTION= mode to prespawn processes for
  reduced creation time.

- parallel SQL execution
  + =PARALLEL= clause, parallel hint in the statement or a default determined by
    the database. Enabled by default with =PARALLEL_MAX_SERVERS= greater than
    zero.
    By default, parallel execution is enabled for DDL and query statements.

- =V$PROCESS=, =V$SESSION=, =V$SESS_IO=, =V$SESSION_LONGOPS=, =V$SESSION_WAIT=,
  =V$WAIT_CHAINS=, =V$SESSTAT=, =V$RESOURCE_LIMIT=, =V$SQLAREA=

- Terminating session
  =ALTER SYSTEM KILL SESSION 'SID,SERIAL#'=

- Terminating SQL
  =ALTER SYSTEM CANCEL SQL 'SID, SERIAL, @INST_ID, SQL_ID'=

** Startup and Shutdown

- Startup and shutdown
  + requires =SYSDBA= or =SYSOPER=, by default owned by =SYS= and =SYSTEM=
  + the database starts up, reads the initialization parameters, allocated SGA
    and starts the background processes; mounting the database opens the control
    file but does not open data files. Opening the database opens the online
    redo log files and data files. =NOMOUNT= (no database access, for database
    creation or recreation of control files), =MOUNT=, =OPEN=, =FORCE=, =OPEN
    RECOVER=, =RESTRICT= (restricted to only administrators)
  + /Normal/ shutdown waits for connections to exit their sessions. /Immediate/
    disconnects all incoming sessions immediately. /TRANSACTIONAL/ shutdowm
    waits for each user complete the current transactions. /ABORT/ shuts down
    the database without waiting for the committed transactions to be written to
    disk.
    + cached data and online redo logs are written to disk. A checkpoint is
      performed on the data files. Data files and online redo files are closed. (MOUNTED)
    + the control file is then updated to record a clean shutdown. (NOMOUNT)
    + background processes are stopped and all SGA are deallocated.

** Quiesced State

A state that only DBA transactions, queries, fetches or PL/SQL statements are
allowed. This state decreases downtime compared to restricted mode.

Any pending non-DBA sessions continue to exist but appear to be blocked until
the database becomes unquiesced.

#+begin_src sql
ALTER SYSTEM QUIESCE RESTRICTED;
ALTER SYSTEM UNQUIESCE.
#+end_src

- =V$INSTANCE=, =V$BLOCKING_QUIESCE=

* Database Storage Structure

- /Physical Structure/ and /Logical Structure/: the primary logical structure in
  a database (a tablespace) contains physical files. The app developer or user
  may not be aware of the underlying physical structure but aware of the logical
  structure.

- A CDB has basically the same structure as a non-CDB except that each PDB has
  its own set of tablespaces including =SYSTEM= and =SYSAUX= and data files.
  + One /control file/, /online redo log/, one or more sets of /temp files/,
    one set of /undo data files/, a set of /system data files/ for every
    container, zero or more sets of /user-created data files/.

** Control File

Tracks the physical components of the database, the root file that the database
uses to find all the other files used by the database.

- Typically, control files are multiplexed or have multiple identical copies.
  A default control is file is specified in =CONTROL_FILES= init parameter.

** Online Redo Log Files

a set of groups of files that store a copy of the changes made to data.

- Online redo logs can fill the gap between the backup and the data state before
  the database failure that requires recovery.

- Oracle Database can multiplex the online redo log files so that two or more
  identical copies of the online redo log file can be maintained on different disks.
  A /redo log file group/ consists of an online redo log file and its multiplexed
  copies.

- LGWR writes redo records from the memory buffer to a redo log group until the
  log files in that group reach their storage size limit or until a log switch
  operation is requested.

** Archived Redo Log Files

Online redo logs can be archived for future data recovery.

** Rollback Segments

No longer preferred as a means to track undo information. See Undo tablespace

*** Undo Data

- /Undo Data/: When a transaction modifies data, Oracle Database copies the
  original data before modifying it.
  + stored in an undo tablespace, by default =UNDOTBLS1= with a maximum
    extension size of 32GB.
  + undo data may be retained for a specified amount of time =UNDO_RETENTION= after committing
    the data.

- Uses:
  + rollback uncommitted data changes.
  + provide /read consistency/, where each user can get a consistent view of data
    even while other changes may be occurring against the data. A user session
    does not see uncommitted changes made in other user sessions. A user should
    have the data state at 10:00 am. if the query starts at 10:00 am even if the
    data is modified at 10:05 am.

** Data Files

Filesystem files that store the data within the database.

- /Segment/: contains a specific type of database object. e.g. a table
  segment, an index segment. A data file can contain many segments.

- /Extent/: a contiguous set of data blocks within a segment. The allocation
  unit of Oracle Database.

- /Data block/: the smallest unit of I/O to database storage. A new tablespace can
  have a different block size than the default one.

** Tablespaces

Logical storage units of a database that group related logical structures
(tables, views and other database objects) into a set of data files.

- A means to physically locate data on storage, a unit of backup and recovery.

- Some default tablespaces
  + =SYSTEM=: for internal database management
  + =SYSAUX=: auxiliary tablespace that contains data for some components and
    products.
  + =TEMP=: the default temporary tablespace. Used for SQL statements
    processing.
  + =UNDOTBS1=: the undo tablespace used by the database to store undo
    information.
  + =USERS=: used to store permanent user objects and data.

- By default, Oracle sets all newly created tablespaces to be locally managed
  (with allocation information in the tablespace itself)
  with automatic segment management.

- Tablespace types:
  + /Permanent/: for user and application data.
  + /Undo/: for transaction rollback, to provide read consistency, to help with
    database recovery and to enable some other features. Only one for an instance.
  + /Temporary/: for temporary data. Normally not necessary to create additional
    temporary tablespaces.

- Tablespace status:
  + /Read Write/: the default.
  + /Read Only/
  + /Offline/: no users can access it.

- Tablespace data files can be set to /autoextending/ so that it autmatically
  extend itself by a specified amount of size when it reaches its size limit.

- Tablespaces can be encrypted.

** Other Structures

- Initialization Parameter File

- Password File: for authentication of users with =SYSDBA=, =SYSOPER= and
  =SYSBACKUP= privileges, even when the database is not started.

- Backup files: copies of the database in some form used to recover the database.

* Users and Security

- /user account/: identified by a /user name/ with the following attributes
  + /authentication method/:
    - account passwords (through the data dictionary)
    - OS authentication: through local connections and secure remote connections
      as a privileged user. Normally the OS username of the database is placed
      in a special group =OSDBA=, =OSOPER=, =OSBACKUPDBA= =OSKMDBA=, =OSRACDBA=
      (different actual names are used on Unix and Windows).
    - password files (kerberos, SSL authentication services): through nonsecure
      connection as a privileged user
    - directory-based authentication service.
    + The latter three do not requires an open database.
  + /password for authentication/
  + /default tablespaces/
  + /tablespace quotas/
  + /account status/ (locked or unlocked)
  + /password status/ (expired or not)
  + a user schema
  + a user also needs approprivate system privileges, object privileges and
    roles for its job.

- Predefined users
  + =SYS=: with =SYSDBA= privilege. can perform all administrative functions. All data dictionary objects are stored
    in the  =SYS= schema.
  + =SYSTEM=: all privileges except backup/recovery, database upgrade. A new
    administrator user is recommended instead of =SYSTEM= for daily
    administrative tasks.
  + =SYSBACKUP=: for RMAN backup and recovery operations
  + =SYSDG=: Data Guard operations
  + =SYSKM=: Transparent Data Encryption keystore operations
  + =SYSRAC=: for Oracle RAC operations
  + =DBSNMP=
  + other internal accounts used by Oracle and its other components.
  + do not use =SYS= or =SYSTEM= for daily tasks, create a custom user with
    appropriate privileges.

** Users in a CDB

- /Common User/: a user that has the same identity in the root and in every PDB.
  + can log in to any container in which it has =CREATE SESSION= privilge.
  + may not have the same privilege in every container.
  + its name must begin with =COMMON_USER_PREFIX= and contains only ASCII,
    uniquely named across all containers.
  + its schemas in containers can differ

- /Local User/: a user that can operate only within a single PDB, owns a single
  schema in a specific PDB.
  + cannot be created in a CDB and cannot connect to another PDB.
  + its name cannot begin with =COMMON_USER_PREFIX=

** User Privileges

Basic level of database security, designed to control user access to data and to
limit the kinds of SQL statements that users can execute.

- /System Privileges/: the privilege to perform a particular action or an action
  on any schema objects of a particular type.
  + =SYSDBA=: for fully empowered database administrators
  + =SYSOPER=: basic operational tasks without the ability to look at user data.
  + =SYSDBA= and =SYSOPER= allow access to database without opening the
    database. They are connections that perform certain database operations for
    which privileges cannot be granted in any other way.
  + =SYSBACKUP=, =SYSDG=, =SYSKM=, =SYSRAC=: these privileges have their
    synonymous users.

- /Object privileges/: the privilege to perform a particular action on a
  specific schema object.

*** /Roles/ Named groups of related privileges.

- Predefined Roles
  + =CONNECT=: enables a user to connect to the database
  + =RESOURCE=: enables a user to create, modify and delete certain types of
    schema objects.
  + =DBA=: enable a user to perform most administrative functions.
  + =DATAPUMP_EXP_FULL_DATABASE=, =DATAPUMP_IMP_FULL_DATABASE=

- Common Roles/Local Roles in a CDB
 + *Both common and local phenomena may grant and be granted locally*:
   Roles and privileges may be granted locally to users and roles regardless of whether
   the grantees, grantors, or roles being granted are local or common.
 + *Only common phenomena may grant or be granted commonly*: Privileges and common
   roles may be granted commonly.  users or roles may be granted roles and
   privileges commonly only if the grantees and grantors are both common; and if a role
   is being granted commonly, then the role itself must be common.

* Managing Schema Objects

- /Schema/: a collection of database objects owned by a user with the same name.
  + no relationship between a tablespace and a schema.

** Tables

- Tables can be /permanent/ or /temporary/.
  + /temporary table/: holds session-private data that exists only for the
    duration of a transaction or session.

- Tables can be of /relational/ type, /object/ type or /XMLType/ type.

- After dropping a table, the table and its content are put into the /Recycle Bin/.

*** Data types

- VARCHAR2: can be used with =CHAR= (code point) instead of the default =BYTE=
  to specify its length. Otherwise =NLS_LANG_SEMANTICS= will be used.

** Indexes

Schema objects that associated with tables to improve query performance. Indexes
are managed and maintained by the database, transparent to the users.

*** Attributes

- Standard B-Tree (default) or Bitmap

- Ascending (default) or descending: how the search is done with the index

- Column or Functional: based on a column or the result of a column.

- single column or concatenated: index on one or multiple columns

- partitioning: the same concept as table partitioning

** View

Customized presentations of data in one or more tables or other views or
regarded as stored queries.

*** Data Dictionary View

**** Static Data Dictionary View

Many data dictionary tables have three corresponding views

- =DBA_*=: all relevant information in the entire database. Intended only for
  administrators.

- =ALL_*=: all the info accessible to the current user.

- =USER_*=: all the info from the user's schema.

*** Dynamic Performance Views

Only for administrators. Starts with =V$=

** Program Code

PL/SQL or Java Source Code (not recommended), written by the app developers.

*** Validation/Compilation

Schema objects such as triggers, procedures and views may become invalid.
Compile these objects to revalidate them.

** Sequence

Concurrency-safe number sequence generator.

** Synonyms

An alias for any schema object such as a table or view.

** Database Link

A schema object that points to another database.

* Backup and Recovery

TODO Need ARCHIVELOG mode for online backup

- /Database backup/: make copies of the data files, control file and archived
  redo log files if any.

- /Database Restore/: copying the physical files of the database from a backup
  to the original or new locations.

- /Database Recovery/: updating database files restored from a backup with the
  changes made to the database after the backup by applying incremental backups
  and redo logs to the restored files.

- /Physical backup/: with =rman= that can backup data files, spfiles, control
  files and archived redo log files.

- /Logical Backup/: exporting databases are a useful supplements to physical
  backups.

- /RMAN Repository/: records of database files and backups of each database on
  which =rman= performs operations.
  + Used to choose the most efficient backups for restore and recovery.

- /Recovery Catalog/: a second copy of rman repository stored in another
  separate database.

** Archive Mode

- =NOARCHIVELOG= mode

- =ARCHIVELOG= mode: filled groups of redo logs are archived. Used to protects
  the database from both instance and media failure.
