#+title: MCS51 Basics

* Hardware

** Original MCS-51 From Intel

- 8-bit CPU

- Logcal separation of program and Data memory: /64K program address space/ and /64K Data memory address space/.

- /4K on chip Program memory/ and /128 bytes on-chip Data RAM/

- 32 bidirectional GPIO

- two 16-bit timer/counters

- Full duplex UART

- 6-source/5-vector interrupt structure with two priority levels

*** Special Functiona Register (SFR)

A map of the on-chip memory area used for various functions on the chip.

** STC89C52

- 6T (enabled when flashing) or 12T per machine cycle

- 8K Flash ROM

- 512 Bytes RAM

- 3 16-bit timers

The duration of two clock cycles is called a _state_. The duration of six states is known as one _machine cycle_. Complex instructions take more than one machine cycle to be carried out.

** Storage

The 8051 implements a /separate memory space for code and data/. Both can be expanded externally to 64KB. The internal memory consists of /on-chip ROM/ and /on-chip data RAM/.

*** On-Chip RAM (0x00-0xFF)

/Registers/ and /IO ports/ are memory mapped. The /stack/ resides within the internal RAM.

The internal data memory space is divided between _internal RAM_ and _special function registers_ (SFR). The 128 bytes extra RAM in the enhanced version is only accessible using indirect addressing. Direct addressing will access SFRs.

**** General-Purpose RAM (0x30-0x7F)

Accessible using direct or indirect address (address in =R0= or =R1=).

**** Bit-Addressable Storage (20-2F)

128-bits for direct bit operations. Bit addresses range from 0x00-0x7F, 0x20-0x2F by byte address. Direct bit operations on such memory region avoids any read-modify-write on typical byte-address memory.

**** Register Banks (0x00-0x1F)

32 registers, 4 banks for fast context switch.

=R0= through =R7= (=0x00= - =0x07=). The active register bank may be altered by changing the register bank select bits in the program status word.

**** 21 Special Function Registers (0x80-0xFF) Including IO Ports P1-P4

Mosst SFRs are accessed using direct addressing.

Some are both bit-addressable and byte-addressable. Special registers have their bit addresses starting at the same number as their byte addresses.

- /Program Status Word/, PSW, 0xD0
  + =CY=: Carry Flag; also as the boolean accumulator, a 1-bit register for boolean instructions operating on bits.
  + =AC=: Auxilliary carry flag: for BCD operations.
  + =F0=: flag 0, for user applications.
  + =RS1:RS0=: register bank selector
  + =OV=: overflow flag, set for operations that result in a number that is out of the range of an signed byte.
  + =P=: even parity flag, the number of 1-bits in the accumulator plus the P bit is always aeven.

- /Accumulator B/, 0xF0: used along with the accumulator A for multiply and divide operations. Can also be treated as a general-purpose scratchpad register.

- /Stack Pointer/, SP, 0x81: empty ascending, initialized by default at 0x07, starting at regsiter bank 1.
  + The stack is kept in internal RAM and is limited to addresses accessible by indirect addressing. Stack sizes are limited, 256 bytes at most.

- /Data Pointer/, DPTR, 0x82 (DPL), 0x83 (DPH): used to specify the address when accessing external code or data memory.

- /Port Registers/, P1-P4: bit-addressable

- /Timer Registers/: two 16-bit timers/counters, the TMOD (timer mode register) and the TCON (timer control register).

- /Serial Port Registers/: SBUF (serial data buffer) for holding received/transmitted data, SCON (serial port control register).

- /Power Control Register/ PCON

- /Interrupt Enable/ IE, /Interrupt Priority Register/ IP.

*** External Memory

- requires at least Port 1 as both the data and the address but.

- ALE asserted at the first half of the memory cycle to tell an external latch
  to latch the address signal output by Port 1 as the address bus, and then cleared to use it as the data bus.

TODO: external code/data memory details

*** Enhancements

- An additional 128 bytes of on-chip RAM from 0x80 to 0xFF, accessible only using indirect addressing.

** Ports

- Port 0 (32-39): also as multiplexed address and data bus

- Port 1 (1-8): simple GPIO

- Port 2 (21-28): also as the high-bytes of the address bus

- Port 3 (10-17): with some special features such as external interrupts, serial IO etc

- /PSEN/ (Program Store Enable): output control signal to enable external program code memory, typically connect to the Output Enable pin of an external EPROM.

- /ALE/ (Address Latch Enable): output signal latches the address into an external register before using Port 0 as the data bus.

- /EA/ (External Access): use external program memory only.

** Timing

8051 requires two clock cycles to perform a single discrete operation (/state/): fetching, decoding or executing.
To fully execute an instruction, 6 states are required, i.e. 12 clock cycles, a machine cycle. Complex instructions
may need more than one machine cycle.

** Reset

Hold the /RST/ high for at least two machine cycles and return it to low either by a manual switch or a power-on reset (PoR).
The Registers will return to a default state.

- Program Counter: to =0x0000=.

* Instruction Set

** Adressing

- /Register/: access registers

- /Direct/

- /Immediate/ =#12=: 8-bit or 16-bi for =DPTR=

- /Indirect/: =@Rn=

- /Relative/: 8-bit signed offset. Used with certain jump instructions and normally as a label.

- /Absolute/: used only with =ACALL= and =AJMP=, 11 bits of address, allow branching within the current 2K page of code memory. The higher 5 bits determines the 2K page.

- /Long/: used only with =LCALL= and =LJMP=: full 16-bit address. Position-dependent.

- /Indexed/: a base register (either the program counter or the data pointer) with an offset (the accumulator): =@A+DPTR=

** Arithmetic

- =INC= operates on =DPTR= while =DEC= does not work with 16-bit =DPTR=.

#+begin_src assembly
    DEL     DPL
    MOV     R7, DPL
    DJNE    R7, #0xFF, SKIP ; if underfloor
    DEC     DPH
SKIP:
#+end_src

- For BCD arithmetic, =ADD= and =ADDC= must be followed by a =DA A= opration to ensure the result is range for BCD.

** Bitwise

- =XRL=: quick and easy way to invert port bits.

- =RR=, =RL=; =RRC=, =RLC=: useful for shift a bit across registers.

- =SWAP A=: swaps the high and low nibbles with the accumulator. Useful operation in BCD manipulations.

** Data Transfer

- =MOV=

- =PUSH=, =POP=: the stack is full-ascending.

- =XCH A=: exchange data between the accumulator and the address.

- =XCHD A @Ri=: exchange the lower nibbles.

- =MOVX=: External RAM requires indirect addressing either through =R0=/=R1= or =DPTR= (16-bit addresses).
   All such data transfer instructions execute in two machine cycles and uses the accumulator as either the source or destination.

** Boolean Instructions

- =SETB=, =CLR=

- The carry bit =CY= in the PSW is used as the a single-bit accumulator of the boolean processor.

- No single-bit XOR operation.

- =JC= (jump if carried), =JB= (jump if bit set), =JBC= (jump if the bit is set and then clear the bit), =JNC= (jump if not carried), =JNB= (jump if bit not set)

** Branching

- =SJMP= (8-bit offset), =LJMP= (16-bit offset), =AJMP= (11-bit absolute address).

#+begin_src asm
MOV DPTR, #JUMP_TABLE
MOV A, #INDEX_NUMBER
RL   A
JMP @A+DPTR

...

JUMP_TABLE: AJMP CASE0
            AJMP CASE1
            AJMP CASE2
            AJMP CASE3
#+end_src

*** Subroutines

- =ACALL=, =LCALL=. The return address is pushed on the stack, low-byte first, high-byte second.

- =RET=: returns execution to the instruction following the =CALL=.

- =RETI=: return from an interrupt service routine. If not in an interrupt handler, =RETI= is identical to =RET=

*** Conditonal Jump

- 8-bit offsest.

- =JZ=, =JNZ=: test if the accumulator is zero and jump.

- =DJNZ=: decrement and jump if not zero, counter loop for n-times until zero.

- =CJNE=: compare and jump if not equal. Loop until equal, also for greater/less-than comparison.

#+begin_src asm
CJNE  A, #20, $+3 ; to JNC regardless of the result. The net result is a pure comparison
JNC   BIG
#+end_src
