#+title: Plain TeX
#+bibliography: latex.bib

* Plain TeX Document Fundamentals[cite:@StartWithPlainTeX]
:PROPERTIES:
:ID:       2cabd949-30b2-4d02-8717-c8d55a71f944
:END:

Unlike LaTeX, TeX requires does not requires an outline. It only requires a
=\bye= to mark the end of the document.

** Control Sequences

Some characters have special purposes:  =^=, =_=, =%=, =~=, =#=, =&=, which must
be prefixed with =\= when used literally.

- =\= :: starts a control sequence, e.g. =\alpha=, =\it=

- ={=, =}= :: for grouping, everything in between is regarded as a single unit.

- =$= :: math mode

** Normal Document

- Paragraphs are separated by a blank line.

- Normal EOLs are treated as blank spaces. Multiple blank spaces are collapsed
  into one Unless =\obeylines= and =\obeyspacs= are used. Blank spaces at the
  beginning of end of a line are trimmed. Use =\Â = or even =\hskip=
  to force a blank space.

- Double quotes are represented by two
  single quotes. The ="= and ='= quotes should not be used since TeX has no
  knowledge of its direction (use =\lq= and =\rq=).

- =\beginsection= followed by a section title produces a section heading.

- font markup: =\rm=, =\sl=, =\it=, =\tt=, =\bf= set the global font. Use ={}=
  to set the local font.

- Accents can be produced with control sequences. (nowadays probably with Unicode).

** Mathematics Mode

Most control sequences are similar to those in LaTeX.

- =$= for inline math and =$$= for displayed math

- Use =\eqno= and =\leqno= to number equations

* TeX Concepts
:PROPERTIES:
:ID:       5c23f4ef-97fa-447e-bf17-9e2677bd80ba
:END:

- *Category code* (*catcode*) :: Characters with special meanings are
  split into 16 categories by their meanings.
  + =\catcode= redefines characters' category.
  + *active characters* :: a category of single characters that expand before other command.

- *token* :: a character, a control sequence or a group.

- *group* :: everything within a pair of braces ={}=

- *control sequence* :: anything that begins with a =\=

- *command* :: a control sequence that may expand to text, definition of control
  sequences etc.
  + *primitive* :: a builtin command

- *register* :: variables

- *length* :: metric that specifies physical printing length. e.g. =3.5pt plus
  1pt minus 2pt=, =1.7\textwidth=.
  + Lengths are defined in terms of /units/, e.g. =pt= (default), =mm=, =cm=,
    =in= etc.

* TeX Registers (Typed Variables)
:PROPERTIES:
:ID:       c92c28d2-e3ec-4020-9ed2-ea7c54e9c720
:END:

Registers range from 0 to 255. Some registers are reserved for the TeX engine.

** (Data) Types

- *box* :: an object for printing, e.g. letters, paragraphs, pages.

- *count* :: an integer

- *dimen* :: holding a length

- *skip*, *muskip* :: glue (certain amount of space put between boxes)

- *toks* :: a sequence of tokens

** Declarations

#+begin_src tex
% only in macros
\newbox
\newcount
\newdimen
\newmuskip
\newskip
\newtoks
#+end_src

** Assignment

#+begin_src tex
\count255 = 17
setbox\mybox = \hbox{blah}
#+end_src

** Arithmetic

Very limited and only for some types.

#+begin_src tex
\advance <register> by <number>
\multiply <register> by <number>
\divide <register> by <number>
#+end_src

* TeX Control Structures
:PROPERTIES:
:ID:       33d9f5f1-5631-479b-ab86-3429fd8e5284
:END:

*** Conditionals and Loops

#+begin_src tex
%\if* <test><true action>\fi
%\if* <test><true action>\else<false action>\fi
% where \if* are conditional commands which can be self-defined by users
\ifnum 5>6
This is true
\else
This is false
\fi

% \ifcase <number><case0>\or<case1>\or...\else<defaultcase>\fi
\ifcase 2 a\or b\or c\or d\else e\fi % the case number 2 is c

% \loop <content> \if*<condition><true action>\repeat
% prints \TeX 10 times
\count255 = 1
\loop
  \TeX
\ifnum\count255 < 10
\advance\count255 by 1
\repeat
#+end_src

*** Others

=\empty= and =\relax= do nothing and are used to separate control sequences to
avoid undesired behaviors.

