#+title: Free Pascal

* Pascal Ecosystem

- Turbo Pascal, Delphi

- GNU Pascal seems dead

- Free Pascal
  + Highly compabible with Turbo Pascal and Delphi.

* Free Pascal Dialects and Modes

FPC supports many different Pascal dialects and feature switches to remain
compatible with many different PASCAL compilers and standards, either by the
=-M= compiler switch or a per-unit ={$MODE }= directive, of which the directive
takes priority.

** Turbo Pascal Mode (TP)

32/64-bit Turbo Pascal 7.0

** Default Mode (FPC)

Turbo Pascal dialect cleaned of DOSism and 16-bit-ism, few differences to TP.

** Object Pascal (objfpc)

Free Pascal version of the Delphi dialect. (incompatible extensions), used by
Lazarus by default, probably the most used dialect nowadays.

** Delphi Mode (DELPHI and DELPHIUNICODE)

the unicode versions supports all Delphi 2009 and above features.

** MACPAS
** ISO

ISO 7185 Mode

** ExtendedPascal

ISO 10206

* Unicode Support

** Source File Codepage and String Literals

Source file codepage determines how string literals are interpreted and if they
are converted when assigning one string type to another. They are determined in
the order by

- =${codepage xxx}= directive

- UTF-8 BOM

- =${modeswitch systemcodepage}= uses the =DefaultSystemCodePage= of the
  computer of the compiler.

- otherwise =CP_ACP=

A string constant is interpreted according to its source file codepage and
converted when assigned to a string type.

* Numeric Types

- literals of different bases: =%1010= (binary), =&644= (octal), =$2A= (hexadecimal)

- a variety of integral types are supported
  + =Boolean=: byte sized; =ByteBool=, =WordBool=, =LongBool=
  + =shortInt= (=int8=), =byte= (=uInt8=)
  + =smallInt= (=int16=), =word= (=uInt16=)
  + =longInt= (=int32=), =longWord=, =cardinal=, =dWord=
  + =int64=, =qWord= (=uInt64=)
  + =NativeInt=, =NativeUInt=: architecture-native word

- =integer= is an alias depending on
  compatibility mode, either =smallInt= (=int16=, turbo pascal, macPascal or
  the default FPC mode) or =longInt= (=int32=).

- =Real=: maps to =double= or =single=.

- =Single=, =Double=, =Extended=, =Comp=, =Currency=

* Text Types

- =Char= (=AnsiChar=), =WideChar=

- =PChar=, =PWideChar=: a pointer to a character array ending with =#0=, null-terminated strings

- =ShortString=: 8-byte length byte character string
  + =PShortString=

- =AnsiString= (of =AnsiChar=; there's =UTF8String=, the UTF8 version), =UnicodeString= (=WideChar=): refcounted null-terminated length-prefixed character string
  + =PAnsiString=, =PUnicodeString=

- =WideString=: OLE =BSTR= on Windows
  + =PWideString=

- =UTF16String=: alias for =WideString= or =UnicodeString=

- =Short=: alias for  =ShortString=, =AnsiString= or =UnicodeString=

Assigning an =AnsiString= (including =UTF8String=) to another =AnsiString=
converts what is in the source to match the code page of the target string.
