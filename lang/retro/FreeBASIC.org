#+title: FreeBASIC

Unfortunately, FB has a C-style header system.

The reason why =False= is =-1= is because (Free)BASIC uses bitwise operator
=Not=. The complement of full =0=​s is full =1=​, which is =-1=.

By default, string literals are not escaped unless prefixed with =!=.

* Basics

- Java/C#/Javascript =Var= type inference is supported.

- to access a shadowed variable in the outer scope, use =..OuterVar=

- =Extern= (external linkage, declaration only, C's =extern=): added in order to support C libraries
  + Not available in QB, new to FreeBASIC.

- =Common=: (external linkage) shared among code modules
  + inherited from QB
  + confusing feature, especially as in =Common Shared=

- =Static= (storage class, lifetime): lifetime starts at program creation and end with program termination
  + internal linkage by default unless =Extern= or =Common=

- =Shared= (visibility) is meant to make a variable visible to all code in the module and
  thus implicitly =Static=.

* QuickBASIC

* OOP

The OOP part of the language is basically a C++03 imitation.

- In addition to normal constructors, there are default constructor (with no
  arguments) and copy constructors.

- a =This= parameter is available in a member procedure/function.

- an object is destroyed (with its destructor called) upon going out of scope.

- =Public=, =Private=, =Protected= work the same way as in C++ to the point of
  syntax similarity.

- VB-style properties are allowed in FreeBASIC, including indexed properties.
