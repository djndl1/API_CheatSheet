#+TITLE: Vb Classic

In the era of [[https://en.wikipedia.org/wiki/Rapid_application_development][Rapid Application Development]]

1. Heavily integrated with COM/OLE, (=String= is OLE =BSTR= and arrays are =SAFEARRAY=)

2. Primarily used for Windows GUI apps

3. Use refcount for memory management

4. Compiled to P-code or native code

5. Supported on up to Windows 10

6. Poor support on OOP and limited threading capability

7. It is possible to reference any COM-visible objects in VB6, including those in CLR.

* Language Variants

1. VBA: for application scripting, still COM/OLE based

2. VBScript: COM-based Windows scripting language for automation and web page (succeeded by PowerShell)

3. GAMBAS: a FOSS variant mainly on Linux

* Form Lifecycle

1. =Initialize=: variables are initialized

2. =Load=: properties and controls are references. The windows and its child controls are created

3. =Resize=: visible or sized changed

4. =Activate=: ready to accept user input

5. =Deactivate=: end user switches to another form

6. =Paint=: the form refreshes itself

7. =QueryUnload=

8. =Unload=

9. =Terminate=: deallocate the memory for the Form

Forms expose a special property, the =Controls= collection, which contains all the controls that are currently loaded on the form itself.

* Basics

** Types

- =Integer= and =Long=

- =Single= and =Double=

- =Date= (=DATE=): =#12/3/2013#

- =Currency= (=CURRENCY=)

- =Boolean=

- =Variant= (=VARIANT=): the default data type that can store any type of data

- =String= (=BSTR=)

** Basic Keywords

- =Dim=: declare variable

- =Set= is there only to assign object reference

- =Variant= can be used as a =Result<T, E>=, returning the result when no error and an error number if needed.

- =TypeName= returns the name of the type

- =Dictionary= belongs to an external library: Microsoft Scripting Runtime

** Quick I/O

=InputBox=

=MsgBox=

** Common Functions

=Len(String)=

=&=: string concatenation

=Mid=: get a substring

- =LBound=, =UBound=

- =Split= a string

- =Join= an array of strings

- =Filter= a string based on a criterion

- =Left=, =Right=: the leftmost/rightmost n chars

- =LCase=, =UCase=

- =Space=: n spaces

- =Replace= a part of a string with another string

- =StrReverse=

- =LTrim=, =RTrim=

- =Asc= a character

- =Chr= an ASCII code integer

** Programming Construct

=If () Then ... ElseIf () Then ... Else ...=

#+begin_src sql
For Each item In Col
...
Next item

For i = 0 To N
...
Next i
#+end_src

#+begin_src sql
While (expr)
...
Wend

Do While (expr)
...
Loop

Do Until (expr)
...
Loop
#+end_src

#+begin_src sql
Private/Public Sub SubName
...
End Sub

Private/Public Function FuncName
...
End Function
#+end_src



* Error Handling

- =On Error Resume Next=: ignore any error

- =On Error Resume=: retry the erring line

- =On Error Goto=: jump to the named label to handle any error

- =On Error Goto 0=: disable any previous =On Error=

If any error inside an event handler goes unhandled, the program terminates.

#+begin_src basic
Err.Raise Number, [Source], [Description], [HelpFile], [HelpContext]
#+end_src

* OOP

- No parameterized constructors, initializer methods and factory methods are used.

- Properties can have arguments

- Public variables have default property implemented by the compiler.
